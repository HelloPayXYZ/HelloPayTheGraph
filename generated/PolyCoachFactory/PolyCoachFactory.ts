// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class NewCoach extends ethereum.Event {
  get params(): NewCoach__Params {
    return new NewCoach__Params(this);
  }
}

export class NewCoach__Params {
  _event: NewCoach;

  constructor(event: NewCoach) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ownerFid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get coach(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get totalCoachFund(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get trainingName(): string {
    return this._event.parameters[4].value.toString();
  }

  get trainingDesc(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PolyCoachFactory extends ethereum.SmartContract {
  static bind(address: Address): PolyCoachFactory {
    return new PolyCoachFactory("PolyCoachFactory", address);
  }

  donationRules(param0: Address): BigInt {
    let result = super.call(
      "donationRules",
      "donationRules(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_donationRules(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "donationRules",
      "donationRules(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  incentive(): Address {
    let result = super.call("incentive", "incentive():(address)", []);

    return result[0].toAddress();
  }

  try_incentive(): ethereum.CallResult<Address> {
    let result = super.tryCall("incentive", "incentive():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isValidDonate(_token: Address, _amount: BigInt): boolean {
    let result = super.call(
      "isValidDonate",
      "isValidDonate(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount),
      ],
    );

    return result[0].toBoolean();
  }

  try_isValidDonate(
    _token: Address,
    _amount: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidDonate",
      "isValidDonate(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pcToken(): Address {
    let result = super.call("pcToken", "pcToken():(address)", []);

    return result[0].toAddress();
  }

  try_pcToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("pcToken", "pcToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  polyCoachStatus(param0: Address): boolean {
    let result = super.call(
      "polyCoachStatus",
      "polyCoachStatus(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBoolean();
  }

  try_polyCoachStatus(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "polyCoachStatus",
      "polyCoachStatus(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalCoach(): BigInt {
    let result = super.call("totalCoach", "totalCoach():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalCoach(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalCoach", "totalCoach():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _donateTokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _minAmounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CompleteCall extends ethereum.Call {
  get inputs(): CompleteCall__Inputs {
    return new CompleteCall__Inputs(this);
  }

  get outputs(): CompleteCall__Outputs {
    return new CompleteCall__Outputs(this);
  }
}

export class CompleteCall__Inputs {
  _call: CompleteCall;

  constructor(call: CompleteCall) {
    this._call = call;
  }
}

export class CompleteCall__Outputs {
  _call: CompleteCall;

  constructor(call: CompleteCall) {
    this._call = call;
  }
}

export class CreateNewCoachCall extends ethereum.Call {
  get inputs(): CreateNewCoachCall__Inputs {
    return new CreateNewCoachCall__Inputs(this);
  }

  get outputs(): CreateNewCoachCall__Outputs {
    return new CreateNewCoachCall__Outputs(this);
  }
}

export class CreateNewCoachCall__Inputs {
  _call: CreateNewCoachCall;

  constructor(call: CreateNewCoachCall) {
    this._call = call;
  }

  get _ownerFid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _trainingName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _trainingDesc(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreateNewCoachCall__Outputs {
  _call: CreateNewCoachCall;

  constructor(call: CreateNewCoachCall) {
    this._call = call;
  }
}

export class DonateCall extends ethereum.Call {
  get inputs(): DonateCall__Inputs {
    return new DonateCall__Inputs(this);
  }

  get outputs(): DonateCall__Outputs {
    return new DonateCall__Outputs(this);
  }
}

export class DonateCall__Inputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DonateCall__Outputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetDonationRulesCall extends ethereum.Call {
  get inputs(): SetDonationRulesCall__Inputs {
    return new SetDonationRulesCall__Inputs(this);
  }

  get outputs(): SetDonationRulesCall__Outputs {
    return new SetDonationRulesCall__Outputs(this);
  }
}

export class SetDonationRulesCall__Inputs {
  _call: SetDonationRulesCall;

  constructor(call: SetDonationRulesCall) {
    this._call = call;
  }

  get _donateTokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _minAmounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetDonationRulesCall__Outputs {
  _call: SetDonationRulesCall;

  constructor(call: SetDonationRulesCall) {
    this._call = call;
  }
}

export class SetNewIncentiveCall extends ethereum.Call {
  get inputs(): SetNewIncentiveCall__Inputs {
    return new SetNewIncentiveCall__Inputs(this);
  }

  get outputs(): SetNewIncentiveCall__Outputs {
    return new SetNewIncentiveCall__Outputs(this);
  }
}

export class SetNewIncentiveCall__Inputs {
  _call: SetNewIncentiveCall;

  constructor(call: SetNewIncentiveCall) {
    this._call = call;
  }

  get _pcToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _incentive(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetNewIncentiveCall__Outputs {
  _call: SetNewIncentiveCall;

  constructor(call: SetNewIncentiveCall) {
    this._call = call;
  }
}

export class SuperviseCall extends ethereum.Call {
  get inputs(): SuperviseCall__Inputs {
    return new SuperviseCall__Inputs(this);
  }

  get outputs(): SuperviseCall__Outputs {
    return new SuperviseCall__Outputs(this);
  }
}

export class SuperviseCall__Inputs {
  _call: SuperviseCall;

  constructor(call: SuperviseCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SuperviseCall__Outputs {
  _call: SuperviseCall;

  constructor(call: SuperviseCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
