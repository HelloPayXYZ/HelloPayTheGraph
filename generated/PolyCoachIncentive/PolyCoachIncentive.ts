// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ClaimedVault extends ethereum.Event {
  get params(): ClaimedVault__Params {
    return new ClaimedVault__Params(this);
  }
}

export class ClaimedVault__Params {
  _event: ClaimedVault;

  constructor(event: ClaimedVault) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get fid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get coach(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get claimedAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PolyCoachIncentive__vaultsRewardsStatusResult {
  value0: Address;
  value1: boolean;
  value2: BigInt;
  value3: BigInt;

  constructor(
    value0: Address,
    value1: boolean,
    value2: BigInt,
    value3: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getOwner(): Address {
    return this.value0;
  }

  getIsCompleted(): boolean {
    return this.value1;
  }

  getTotalDonors(): BigInt {
    return this.value2;
  }

  getTotalSupervisors(): BigInt {
    return this.value3;
  }
}

export class PolyCoachIncentive extends ethereum.SmartContract {
  static bind(address: Address): PolyCoachIncentive {
    return new PolyCoachIncentive("PolyCoachIncentive", address);
  }

  accountsRewardsStatus(param0: Address): BigInt {
    let result = super.call(
      "accountsRewardsStatus",
      "accountsRewardsStatus(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_accountsRewardsStatus(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "accountsRewardsStatus",
      "accountsRewardsStatus(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  factory(): Address {
    let result = super.call("factory", "factory():(address)", []);

    return result[0].toAddress();
  }

  try_factory(): ethereum.CallResult<Address> {
    let result = super.tryCall("factory", "factory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerRewardsDivisor(): BigInt {
    let result = super.call(
      "ownerRewardsDivisor",
      "ownerRewardsDivisor():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_ownerRewardsDivisor(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ownerRewardsDivisor",
      "ownerRewardsDivisor():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pcToken(): Address {
    let result = super.call("pcToken", "pcToken():(address)", []);

    return result[0].toAddress();
  }

  try_pcToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("pcToken", "pcToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vaultsRewardsStatus(
    param0: Address,
  ): PolyCoachIncentive__vaultsRewardsStatusResult {
    let result = super.call(
      "vaultsRewardsStatus",
      "vaultsRewardsStatus(address):(address,bool,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new PolyCoachIncentive__vaultsRewardsStatusResult(
      result[0].toAddress(),
      result[1].toBoolean(),
      result[2].toBigInt(),
      result[3].toBigInt(),
    );
  }

  try_vaultsRewardsStatus(
    param0: Address,
  ): ethereum.CallResult<PolyCoachIncentive__vaultsRewardsStatusResult> {
    let result = super.tryCall(
      "vaultsRewardsStatus",
      "vaultsRewardsStatus(address):(address,bool,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PolyCoachIncentive__vaultsRewardsStatusResult(
        value[0].toAddress(),
        value[1].toBoolean(),
        value[2].toBigInt(),
        value[3].toBigInt(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _pcToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _factory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get fid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get targetVaults(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class CompleteCall extends ethereum.Call {
  get inputs(): CompleteCall__Inputs {
    return new CompleteCall__Inputs(this);
  }

  get outputs(): CompleteCall__Outputs {
    return new CompleteCall__Outputs(this);
  }
}

export class CompleteCall__Inputs {
  _call: CompleteCall;

  constructor(call: CompleteCall) {
    this._call = call;
  }

  get vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CompleteCall__Outputs {
  _call: CompleteCall;

  constructor(call: CompleteCall) {
    this._call = call;
  }
}

export class CreateNewCoachCall extends ethereum.Call {
  get inputs(): CreateNewCoachCall__Inputs {
    return new CreateNewCoachCall__Inputs(this);
  }

  get outputs(): CreateNewCoachCall__Outputs {
    return new CreateNewCoachCall__Outputs(this);
  }
}

export class CreateNewCoachCall__Inputs {
  _call: CreateNewCoachCall;

  constructor(call: CreateNewCoachCall) {
    this._call = call;
  }

  get vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreateNewCoachCall__Outputs {
  _call: CreateNewCoachCall;

  constructor(call: CreateNewCoachCall) {
    this._call = call;
  }
}

export class DonateCall extends ethereum.Call {
  get inputs(): DonateCall__Inputs {
    return new DonateCall__Inputs(this);
  }

  get outputs(): DonateCall__Outputs {
    return new DonateCall__Outputs(this);
  }
}

export class DonateCall__Inputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }

  get vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DonateCall__Outputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SuperviseCall extends ethereum.Call {
  get inputs(): SuperviseCall__Inputs {
    return new SuperviseCall__Inputs(this);
  }

  get outputs(): SuperviseCall__Outputs {
    return new SuperviseCall__Outputs(this);
  }
}

export class SuperviseCall__Inputs {
  _call: SuperviseCall;

  constructor(call: SuperviseCall) {
    this._call = call;
  }

  get vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SuperviseCall__Outputs {
  _call: SuperviseCall;

  constructor(call: SuperviseCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
